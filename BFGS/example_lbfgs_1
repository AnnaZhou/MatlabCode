  
  load('data/2moons.mat');
  fun = @myloss;
  
  x=x';
  for i=1:2
  x(i,:)=(x(i,:)-min(x(i,:)))/((max(x(i,:)))-(min(x(i,:))))-0.5;
  end
  
  %shafle the data
  clear xpos;clear xneg;
  xposi=1;xnegi=1; n = size(y,1);
  for i = 1:size(y,1)
      if y(i,1) == 1
         xpos(:,xposi)=x(:,i);
         xposi = xposi+1;
      else
         xneg(:,xnegi)=x(:,i);
         xnegi = xnegi+1;
      end
  end
  for i =1:min(size(xpos,2),size(xneg,2))
      xx(:,(2*i-1))=xpos(:,i);
      xx(:,(2*i)) = xneg(:,i);
      yy(:,(2*i-1))=1;
      yy(:,(2*i)) = -1;
  end
 
  % Call L-BFGS starting from the origin
 %  [w,iter,loss] = lbfgs_svm(xx,yy,fun);
  [w,iter,loss] = lbfgs_classic(xx,yy,fun);
  
% [w,iter,loss] = mylbfgs(xx,yy,fun);
  
  y1=w'*x;
  hold on;
  for i = 1:size(x,2)
      if y1(1,i)>=0
         plot(x(1,i),x(2,i),'r');
      else
         plot(x(1,i),x(2,i),'b');
      end
%       if y(i,1)>=0
%          plot(x(1,i),x(2,i),'g');
%       else
%          plot(x(1,i),x(2,i),'s');
%       end
  end
